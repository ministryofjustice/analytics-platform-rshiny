---
name: Build & Test

on: # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
    tags: ["*"]
  schedule:
    - cron: "0 0 * * SAT"

permissions:
  contents: write # This is required for actions/checkout

jobs:
  yamllint:
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main
      - name: Run yaml Lint
        uses: actionshub/yamllint@main

  mdl:
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main
      - name: Run Markdown Lint
        uses: actionshub/markdownlint@main

  docker:
    strategy:
      matrix:
        r: [4.1, 4.2]
        shinyserver: [0.0.6]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: write # This is required for actions/checkout
    env:
      REPOSITORY: rshiny
      ECR_REPOSITORY: rshiny
    needs: [mdl, yamllint]
    steps:
      - name: Configure AWS credentials
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::593291632749:role/github-actions-ecr-oidc"
          role-session-name: githubactionsiamsession
          aws-region: eu-west-1

      - name: Configure AWS credentials (local build under act)
        if: ${{ env.ACT }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ steps.login-ecr.outputs.registry }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build, tag, and push image to Amazon ECR
        if: github.ref == 'refs/heads/main'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "rshiny"
          IMAGE_TAG: "r${{ matrix.r }}-shiny${{ matrix.shinyserver }}"
        run: |
          docker build --build-arg r=${{ matrix.r }} --build-arg shinyserver=${{ matrix.shinyserver }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push image to Amazon ECR
        if: github.ref != 'refs/heads/main'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "rshiny"
          IMAGE_TAG: "r${{ matrix.r }}-shiny${{ matrix.shinyserver }}-${{ github.head_ref }}"
        run: |
          docker build --build-arg r=${{ matrix.r }} --build-arg shinyserver=${{ matrix.shinyserver }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
